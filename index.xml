<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hard drive</title>
    <link>https://fcalabria.github.io/hard-drive/</link>
    <description>Recent content on Hard drive</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 15 May 2019 00:18:40 +0200</lastBuildDate><atom:link href="https://fcalabria.github.io/hard-drive/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Js differences</title>
      <link>https://fcalabria.github.io/hard-drive/cheatsheets/python/python.js-differences/</link>
      <pubDate>Mon, 18 Nov 2019 12:47:40 +0200</pubDate>
      
      <guid>https://fcalabria.github.io/hard-drive/cheatsheets/python/python.js-differences/</guid>
      <description>True and False are uppercase. and, or, is and not are keywords to compare and negate. None is an object. Always compare with is instead of ==. Using boolean logical operators on ints casts them to booleans for evaluation, but their non-cast value is returned. Don&amp;rsquo;t mix up with bool(ints) and &amp;amp; or |.  bool(4) # =&amp;gt; True bool(-6) # =&amp;gt; True 0 and 2 # =&amp;gt; 0 -5 or 0 # =&amp;gt; -5  You can chain &amp;lt; and so.</description>
    </item>
    
    <item>
      <title>Commands</title>
      <link>https://fcalabria.github.io/hard-drive/cheatsheets/shell/shell.commands/</link>
      <pubDate>Wed, 15 May 2019 00:18:40 +0200</pubDate>
      
      <guid>https://fcalabria.github.io/hard-drive/cheatsheets/shell/shell.commands/</guid>
      <description>cat &amp;lt;filename&amp;gt; logs a file
  head -n &amp;lt;number&amp;gt; &amp;lt;filename&amp;gt; logs the first number lines of a file
  tail -n &amp;lt;number&amp;gt; &amp;lt;filename&amp;gt; logs the last number lines of a file
  grep &amp;lt;text&amp;gt; &amp;lt;filename&amp;gt;logs the lines containing text on the file
 -v --invert-match logs the lines not containing text on the file -i --ignore-case matches independently of the case -E support for all regex instead of &amp;lt;text&amp;gt; -r recursively searchs in all files.</description>
    </item>
    
    <item>
      <title>Basic</title>
      <link>https://fcalabria.github.io/hard-drive/cheatsheets/sql/sql.basic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fcalabria.github.io/hard-drive/cheatsheets/sql/sql.basic/</guid>
      <description>CREATE DATABASE mydatabasename; to create a DDBB USE mydatabasename; start working on a specific DDBB CREATE TABLE mytablename (colname1 char(5), colname2 varchar(30)); to create a table with specific columns ALTER TABLE mytablename ADD COLUMN colname varchar(30); to add a new column to an existing table ALTER TABLE mytablename RENAME colname TO newcolname; to rename a column from an existing table ALTER TABLE mytablename DROP colname; remove a column from an existing table INSERT INTO mytablename VALUES (&amp;quot;first column value&amp;quot;, &amp;quot;second column value&amp;quot;); to add data to a table in the predefined order INSERT INTO mytablename (colname1) VALUES (&amp;quot;first column value&amp;quot;); to add data to a table changing the order or omiting values SELECT * FROM mytablename; get all registries from a table SELECT * FROM mytablename LIMIT 1; get just the first register (combine with sorting) SELECT colname3, colname4 FROM mytablename WHERE colname2 = colvalue; get specific columns for rows that match a criteria SELECT * FROM mytablename WHERE colname IS NULL; empty values.</description>
    </item>
    
    <item>
      <title>Workspace</title>
      <link>https://fcalabria.github.io/hard-drive/tools-and-resources/workspace-setup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fcalabria.github.io/hard-drive/tools-and-resources/workspace-setup/</guid>
      <description>VSCode extensions  Bracket pair colorizer Easily detect brackets pairs. Git blame See git blame information about a line on the bottom bar. Import cost Display the weight you are adding to your project with each import. Polacode Pretty snapshots of your code, without external tools. SVG Minimizer, previewer, autocomplete&amp;hellip; all the tools you need for svg images. Licenser Automatically add license in files. Compatible with a lot of filetypes.  Themes, icons&amp;hellip;  VSCode icons Nice set of icons for vscode Fira code Best programming font ever  CL tools  Fx JSON processing tool  </description>
    </item>
    
    <item>
      <title>Writing scripts</title>
      <link>https://fcalabria.github.io/hard-drive/cheatsheets/shell/shell.writing/</link>
      <pubDate>Wed, 15 May 2019 00:18:40 +0200</pubDate>
      
      <guid>https://fcalabria.github.io/hard-drive/cheatsheets/shell/shell.writing/</guid>
      <description>set -e The script will exit early if any line fails
set -o pipefail The script will mark lines as failed if any piped command on it fails
Variables Variables are declared just like this varname=value but to be referenced need to have a $ before $varname
Double quotes enable variable interpolation, while single quotes don&amp;rsquo;t. Use with care.
If you don&amp;rsquo;t use quotes at all and your variable has whitespaces, it will be interpreted as different arguments.</description>
    </item>
    
    <item>
      <title>Data types</title>
      <link>https://fcalabria.github.io/hard-drive/cheatsheets/sql/sql.datatypes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fcalabria.github.io/hard-drive/cheatsheets/sql/sql.datatypes/</guid>
      <description>   Code Long name Notes     char character String with fixed length in memory   varchar variable character String with flexible length in memory   numeric numeric Number with a specific quantity of cyphers (4,2) marks 4 total cyphers, 2 of them decimals   bool boolean 0 is false, non-zero is true   timestamp timestamp date In seconds. Can be initialized and updated automatically    </description>
    </item>
    
    <item>
      <title>Multiple tables</title>
      <link>https://fcalabria.github.io/hard-drive/cheatsheets/sql/sql.multipletables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fcalabria.github.io/hard-drive/cheatsheets/sql/sql.multipletables/</guid>
      <description>SELECT * FROM table1, table2 WHERE table1.colname = table2.colname; search data from two tables (not ideal way) SELECT * FROM table1 INNER JOIN table2 ON table1.colname = table2.colname; search data joining two tables (inner is optional) SELECT * FROM table1 a JOIN table2 b ON a.colname = b.colname; alias for he table names (keep sentence short)  Join types:  INNER: shows only data present in both tables. Default mode LEFT: shows all registries from the first table even in they don&amp;rsquo;t match any item from the second table RIGHT: shows all registries from the second table even in they don&amp;rsquo;t match any item from the first table.</description>
    </item>
    
    <item>
      <title>Testing stuff</title>
      <link>https://fcalabria.github.io/hard-drive/tools-and-resources/testing-stuff/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fcalabria.github.io/hard-drive/tools-and-resources/testing-stuff/</guid>
      <description>Tools  Pact Keep your front-back contract green without writing more tests. Stryker mutator Mutation testing Very unstable and non-trustable reports.  Readings  Different types of testing explained Introductory article. The art of unit testing, Roy Osherove Book covering from the basics to how to implement testing in the organization. Mocking is a code smell, Eric Elliott Article about why having a lot of mocks in unit tests is a bad signal, and how to avoid them  </description>
    </item>
    
    <item>
      <title>Running scripts</title>
      <link>https://fcalabria.github.io/hard-drive/cheatsheets/shell/shell.running/</link>
      <pubDate>Wed, 15 May 2019 00:18:40 +0200</pubDate>
      
      <guid>https://fcalabria.github.io/hard-drive/cheatsheets/shell/shell.running/</guid>
      <description>#!/bin/sh at the begining allows the script to be run writing just myscript.sh instead of sh myscript.sh on the command line.
For this to work you may need to set the file as executable (chmod +x &amp;lt;filename&amp;gt;.sh)
You can pass arguments to a script the same way you pass them to a function
# Command line ./my-script.sh arg1 arg2 # Script echo &amp;#34;$1- $2&amp;#34; # will print # arg1 - arg2 If you copy or move a script without the .</description>
    </item>
    
    <item>
      <title>Test pending</title>
      <link>https://fcalabria.github.io/hard-drive/tools-and-resources/test-pending/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fcalabria.github.io/hard-drive/tools-and-resources/test-pending/</guid>
      <description> Faker CSS peek Regex previewer Dayjs Vuese eCSStractor MkDocs Zdog  </description>
    </item>
    
    <item>
      <title>Resources</title>
      <link>https://fcalabria.github.io/hard-drive/cheatsheets/shell/shell.resources/</link>
      <pubDate>Wed, 15 May 2019 00:18:40 +0200</pubDate>
      
      <guid>https://fcalabria.github.io/hard-drive/cheatsheets/shell/shell.resources/</guid>
      <description> https://learnxinyminutes.com/docs/bash/ http://tldp.org/LDP/Bash-Beginners-Guide/html/index.html  </description>
    </item>
    
    <item>
      <title>Subqueries</title>
      <link>https://fcalabria.github.io/hard-drive/cheatsheets/sql/sql.subqueries/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fcalabria.github.io/hard-drive/cheatsheets/sql/sql.subqueries/</guid>
      <description>They are done with parenthesis, and allow to perform complex searchs. Example:
SELECT name, year FROM friends WHERE year = (SELECT year FROM friends GROUP BY year ORDER BY count(*) DESC LIMIT 1); If the subquery returns more than one value, use IN instead of =. Example:
SELECT name FROM friends WHERE citycode IN (SELECT code FROM cities WHERE name LIKE &amp;#34;C%&amp;#34;);  First do a query with the subquery (the part in parenthesis) to check that it is valid and returns what you want</description>
    </item>
    
    <item>
      <title>Cases</title>
      <link>https://fcalabria.github.io/hard-drive/cheatsheets/sql/sql.cases/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fcalabria.github.io/hard-drive/cheatsheets/sql/sql.cases/</guid>
      <description>A bit like a switch statement, but to create new columns on the results. Example:
SELECT type, heart_rate, CASE WHEN heart_rate &amp;gt; 220-30 THEN &amp;#34;above max&amp;#34; WHEN heart_rate &amp;gt; ROUND(0.90 * (220-30)) THEN &amp;#34;above target&amp;#34; WHEN heart_rate &amp;gt; ROUND(0.50 * (220-30)) THEN &amp;#34;within target&amp;#34; ELSE &amp;#34;below target&amp;#34; END as &amp;#34;hr_zone&amp;#34; FROM exercise_logs; Will show something like:
   type heart_rate hr_zone     biking 110 within target   biking 105 within target   dancing 120 within target   climbing 90 below target    </description>
    </item>
    
    <item>
      <title>Bash</title>
      <link>https://fcalabria.github.io/hard-drive/dotfiles/bash_profile/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fcalabria.github.io/hard-drive/dotfiles/bash_profile/</guid>
      <description>Aliases  Open the coverage report: alias o:coverage=&#39;open -a &amp;quot;Google Chrome&amp;quot; coverage/html/index.html&#39; Delete all in location. Use with caution: alias salla=&#39;rm -rf --&#39; Remove all node_modules (thanks to Carlos): alias purge-node-modules=&#39;find . -name node_modules -type d -prune -exec trash {} +&#39; Show stale branches:  alias git:stale=&amp;#39;git_stale&amp;#39; # I want to modify this function to delete the stale branches with an optional argument git_stale() { show_stale() { git branch -r | awk &amp;#39;{print $1}&amp;#39; | egrep -v -f /dev/fd/0 &amp;lt;(git branch -vv | grep origin) | awk &amp;#39;{print $1}&amp;#39; } show_stale } Other stuff Show current git branch in command line.</description>
    </item>
    
    <item>
      <title>Git</title>
      <link>https://fcalabria.github.io/hard-drive/dotfiles/git/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fcalabria.github.io/hard-drive/dotfiles/git/</guid>
      <description>Cool combos  Unstage: unstage = reset HEAD -- Add changes to last commit: amend = commit --amend --no-edit The &amp;ldquo;I forgot to delete a console.log&amp;rdquo; comand: ups = !git add . &amp;amp;&amp;amp; git amend &amp;amp;&amp;amp; git push --force Push a new branch creating the origin counterpart: pushnew = push -u origin HEAD Update remote references and pull master: updateAll = !git stash -u &amp;amp;&amp;amp; git checkout master &amp;amp;&amp;amp; git fetch --all --prune &amp;amp;&amp;amp; git pull &amp;amp;&amp;amp; git checkout - Show last 10 commits: hist = log --pretty=format:&#39;%ad | %Cgreen %s%d %Creset [%an] %Cblue%h&#39; --graph --date=short -n 10 Show history as a tree: tree = log --oneline --all --graph --decorate  Just some shortcuts  alias.</description>
    </item>
    
    <item>
      <title>Other tools</title>
      <link>https://fcalabria.github.io/hard-drive/tools-and-resources/other-tools/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fcalabria.github.io/hard-drive/tools-and-resources/other-tools/</guid>
      <description> Carbon Online generator for snapshots Git explorer To get git commands quickly  </description>
    </item>
    
    <item>
      <title>Visual Studio Code</title>
      <link>https://fcalabria.github.io/hard-drive/cheatsheets/vscode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fcalabria.github.io/hard-drive/cheatsheets/vscode/</guid>
      <description>Visual shortcuts  cmd + B Toogle side bar cmd + alt + right/left arrow Next/previous editor cmd + number Change editor group cmd + ctrl + right/left arrow Split or move file to group  Navigation shortcuts  cmd + shift + o Go to symbol in file cmd + alt + k Toggle bookmark (extension) cmd + alt + l/j Next/previous bookmark (extension)  Others Add types to variables on javascript files:</description>
    </item>
    
  </channel>
</rss>
